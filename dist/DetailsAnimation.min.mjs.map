{"version":3,"sources":["DetailsAnimation.mjs"],"names":["_preOpen","_animation","_summaryElement","_summaryToggleHTML","_detailsContentElement","_detailsContentCustomElementName","_windowResizeTimeoutId","_summaryClickEventListener","_summaryMouseEnterEventListener","_summaryMouseLeaveEventListener","_detailsContentTransitionEndEventListener","_windowResizeEventListener","__classPrivateFieldSet","this","receiver","privateMap","value","has","TypeError","set","__classPrivateFieldGet","get","DetailsAnimation","HTMLDetailsElement","[object Object]","super","_summaryClickEvent","bind","_summaryMouseEnterEvent","_summaryMouseLeaveEvent","_detailsContentTransitionEndEvent","_windowResizeEvent","summaryElement","querySelector","Error","undefined","window","tabIndex","open","getAttribute","detailsContentCustomElementName","dataset","contentElement","includes","summaryToggle","fragment","document","createDocumentFragment","nextNode","nextSibling","appendChild","detailsContentElement","createElement","insertAdjacentElement","slot","_open","_close","addEventListener","passive","removeEventListener","ev","preventDefault","preOpen","_toggleSummary","summaryToggleHTML","innerHTML","textContent","insertAdjacentHTML","setTimeout","style","height","String","scrollHeight","willChange","timeoutId","clearTimeout","WeakMap"],"mappings":"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","file":"DetailsAnimation.min.mjs","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _preOpen, _animation, _summaryElement, _summaryToggleHTML, _detailsContentElement, _detailsContentCustomElementName, _windowResizeTimeoutId, _summaryClickEventListener, _summaryMouseEnterEventListener, _summaryMouseLeaveEventListener, _detailsContentTransitionEndEventListener, _windowResizeEventListener;\n/**\n * Animate the opening or closing process of the <details> element by Custom Elements.\n *\n * @example\n * <details is=\"animation-details\"\n *   open=\"[Optional・boolean] Whether the details are visible.\"\n *   data-content-element=\"[Optional] Custom element name for the <details> content (Content excluding <summary> in the <details> element). Note that custom element names must contain a hyphen. The default value is `x-animation-details-content`.\"\n *   data-summary-toggle=\"[Optional] Switch the contents of the <summary> element when opening or closing. You can write HTML markup directly.\"\n * >\n *   <summary>Caption text</summary>\n *   <p>Contents text</p>\n * </details>\n *\n * @version 1.0.0\n */\nexport default class DetailsAnimation extends HTMLDetailsElement {\n    constructor() {\n        super();\n        _preOpen.set(this, false); // アニメーションの実現のため本来の open 属性の反映タイミングは実際とは変えており、開閉処理が始まった瞬間の状態をこの変数に記録する\n        _animation.set(this, false); // アニメーション中かどうか\n        _summaryElement.set(this, null);\n        _summaryToggleHTML.set(this, void 0);\n        _detailsContentElement.set(this, null); // <details> 要素内の <summary> 要素を除くコンテンツを囲う要素\n        _detailsContentCustomElementName.set(this, 'x-animation-details-content'); // <details> 要素内の <summary> 要素を除くコンテンツを囲う要素の名前\n        _windowResizeTimeoutId.set(this, null); // window.onresize のタイマーの識別 ID（clearTimeout() で使用）\n        _summaryClickEventListener.set(this, void 0);\n        _summaryMouseEnterEventListener.set(this, void 0);\n        _summaryMouseLeaveEventListener.set(this, void 0);\n        _detailsContentTransitionEndEventListener.set(this, void 0);\n        _windowResizeEventListener.set(this, void 0);\n        __classPrivateFieldSet(this, _summaryClickEventListener, this._summaryClickEvent.bind(this));\n        __classPrivateFieldSet(this, _summaryMouseEnterEventListener, this._summaryMouseEnterEvent.bind(this));\n        __classPrivateFieldSet(this, _summaryMouseLeaveEventListener, this._summaryMouseLeaveEvent.bind(this));\n        __classPrivateFieldSet(this, _detailsContentTransitionEndEventListener, this._detailsContentTransitionEndEvent.bind(this));\n        __classPrivateFieldSet(this, _windowResizeEventListener, this._windowResizeEvent.bind(this));\n    }\n    connectedCallback() {\n        const summaryElement = this.querySelector('summary');\n        if (summaryElement === null) {\n            throw new Error('Element <details> is missing a required instance of child element <summary>.');\n        }\n        __classPrivateFieldSet(this, _summaryElement, summaryElement);\n        if (window.HTMLDetailsElement === undefined) {\n            /* <details> 未対応ブラウザ */\n            summaryElement.tabIndex = 0;\n            this.open = this.getAttribute('open') !== null;\n        }\n        const detailsContentCustomElementName = this.dataset.contentElement;\n        if (detailsContentCustomElementName !== undefined) {\n            if (!detailsContentCustomElementName.includes('-')) {\n                throw new Error('Attribute: `data-content-element` value must contain a hyphen.');\n            }\n            __classPrivateFieldSet(this, _detailsContentCustomElementName, detailsContentCustomElementName);\n        }\n        __classPrivateFieldSet(this, _summaryToggleHTML, this.dataset.summaryToggle);\n        /* <summary> を除くノードを <div> でラップする */\n        const fragment = document.createDocumentFragment();\n        let nextNode = summaryElement.nextSibling;\n        while (nextNode !== null) {\n            fragment.appendChild(nextNode);\n            nextNode = summaryElement.nextSibling;\n        }\n        const detailsContentElement = document.createElement(__classPrivateFieldGet(this, _detailsContentCustomElementName));\n        summaryElement.insertAdjacentElement('afterend', detailsContentElement);\n        __classPrivateFieldSet(this, _detailsContentElement, detailsContentElement);\n        const contentElement = document.createElement('div');\n        contentElement.slot = 'content';\n        contentElement.appendChild(fragment);\n        detailsContentElement.appendChild(contentElement);\n        const open = this.open;\n        __classPrivateFieldSet(this, _preOpen, open);\n        if (open) {\n            this._open();\n        }\n        else {\n            this._close();\n        }\n        summaryElement.addEventListener('click', __classPrivateFieldGet(this, _summaryClickEventListener));\n        summaryElement.addEventListener('mouseenter', __classPrivateFieldGet(this, _summaryMouseEnterEventListener), { passive: true });\n        summaryElement.addEventListener('mouseleave', __classPrivateFieldGet(this, _summaryMouseLeaveEventListener), { passive: true });\n        detailsContentElement.addEventListener('transitionend', __classPrivateFieldGet(this, _detailsContentTransitionEndEventListener), { passive: true });\n    }\n    disconnectedCallback() {\n        const summaryElement = __classPrivateFieldGet(this, _summaryElement);\n        const detailsContentElement = __classPrivateFieldGet(this, _detailsContentElement);\n        summaryElement.removeEventListener('click', __classPrivateFieldGet(this, _summaryClickEventListener));\n        summaryElement.removeEventListener('mouseenter', __classPrivateFieldGet(this, _summaryMouseEnterEventListener));\n        summaryElement.removeEventListener('mouseleave', __classPrivateFieldGet(this, _summaryMouseLeaveEventListener));\n        detailsContentElement.removeEventListener('transitionend', __classPrivateFieldGet(this, _detailsContentTransitionEndEventListener));\n        window.removeEventListener('resize', __classPrivateFieldGet(this, _windowResizeEventListener));\n    }\n    /**\n     * <summary> 要素をクリックしたときの処理\n     *\n     * @param {Event} ev - Event\n     */\n    _summaryClickEvent(ev) {\n        ev.preventDefault();\n        const preOpen = !__classPrivateFieldGet(this, _preOpen);\n        __classPrivateFieldSet(this, _preOpen, preOpen);\n        this._toggleSummary();\n        if (!__classPrivateFieldGet(this, _animation) && preOpen) {\n            this.open = true;\n        }\n        if (preOpen) {\n            this._open();\n        }\n        else {\n            this._close();\n        }\n        __classPrivateFieldSet(this, _animation, true);\n    }\n    /**\n     * <summary> 要素の表示を切り替える\n     */\n    _toggleSummary() {\n        const summaryToggleHTML = __classPrivateFieldGet(this, _summaryToggleHTML);\n        if (summaryToggleHTML !== undefined) {\n            const summaryElement = __classPrivateFieldGet(this, _summaryElement);\n            __classPrivateFieldSet(this, _summaryToggleHTML, summaryElement.innerHTML);\n            summaryElement.textContent = '';\n            summaryElement.insertAdjacentHTML('beforeend', summaryToggleHTML);\n        }\n    }\n    /**\n     * コンテンツエリアを開く処理\n     */\n    _open() {\n        setTimeout(() => {\n            __classPrivateFieldGet(this, _detailsContentElement).style.height = `${String(__classPrivateFieldGet(this, _detailsContentElement).scrollHeight)}px`;\n        }, 0); // TODO 最初から open 状態の場合、初期状態では高さが正常に取得できないための回避策\n        window.addEventListener('resize', __classPrivateFieldGet(this, _windowResizeEventListener), { passive: true });\n    }\n    /**\n     * コンテンツエリアを閉じる処理\n     */\n    _close() {\n        __classPrivateFieldGet(this, _detailsContentElement).style.height = '0';\n        window.removeEventListener('resize', __classPrivateFieldGet(this, _windowResizeEventListener));\n    }\n    /**\n     * <summary> 要素上にマウスカーソルが入ったときの処理\n     */\n    _summaryMouseEnterEvent() {\n        __classPrivateFieldGet(this, _detailsContentElement).style.willChange = 'height';\n    }\n    /**\n     * <summary> 要素上からマウスカーソルが外れたときの処理\n     */\n    _summaryMouseLeaveEvent() {\n        __classPrivateFieldGet(this, _detailsContentElement).style.willChange = '';\n    }\n    /**\n     * 開閉アニメーションが終了したときの処理\n     */\n    _detailsContentTransitionEndEvent() {\n        __classPrivateFieldSet(this, _animation, false);\n        if (!__classPrivateFieldGet(this, _preOpen)) {\n            this.open = false;\n        }\n    }\n    /**\n     * ウィンドウサイズを変更した時の処理\n     */\n    _windowResizeEvent() {\n        const timeoutId = __classPrivateFieldGet(this, _windowResizeTimeoutId);\n        if (timeoutId !== null) {\n            clearTimeout(timeoutId);\n        }\n        __classPrivateFieldSet(this, _windowResizeTimeoutId, setTimeout(() => {\n            const detailsContentElement = __classPrivateFieldGet(this, _detailsContentElement);\n            detailsContentElement.style.height = 'auto';\n            detailsContentElement.style.height = `${String(detailsContentElement.scrollHeight)}px`;\n        }, 100));\n    }\n}\n_preOpen = new WeakMap(), _animation = new WeakMap(), _summaryElement = new WeakMap(), _summaryToggleHTML = new WeakMap(), _detailsContentElement = new WeakMap(), _detailsContentCustomElementName = new WeakMap(), _windowResizeTimeoutId = new WeakMap(), _summaryClickEventListener = new WeakMap(), _summaryMouseEnterEventListener = new WeakMap(), _summaryMouseLeaveEventListener = new WeakMap(), _detailsContentTransitionEndEventListener = new WeakMap(), _windowResizeEventListener = new WeakMap();\n"]}